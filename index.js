import{S as E}from"./assets/vendor-CgTBfC_f.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();async function d(o,t=1,s=15){try{return(await axios.get(BASE_URL,{params:{key:API_KEY,q:o,image_type:"photo",orientation:"horizontal",safesearch:!0,page:t,per_page:s}})).data}catch(i){throw console.error("Error fetching images:",i),i}}const u=document.querySelector(".gallery"),f=document.querySelector(".loader"),m=document.querySelector(".load-more"),S=new E(".gallery a");function y(o){const t=o.map(({webformatURL:s,largeImageURL:i,tags:e,likes:r,views:a,comments:v,downloads:q})=>`
        <li class="gallery-item">
          <a href="${i}" class="gallery-link">
            <img src="${s}" alt="${e}" class="gallery-image" />
          </a>
          <div class="info">
            <p>❤️ ${r}</p>
            <p>👁️ ${a}</p>
            <p>💬 ${v}</p>
            <p>⬇️ ${q}</p>
          </div>
        </li>
      `).join("");u.insertAdjacentHTML("beforeend",t),S.refresh()}function b(){u.innerHTML=""}function g(){f.classList.add("visible")}function p(){f.classList.remove("visible")}function h(){m.style.display="block"}function c(){m.style.display="none"}let l="",n=1;const L=15,w=document.querySelector(".form");document.querySelector(".gallery");const B=document.querySelector(".load-more");document.querySelector(".loader");w.addEventListener("submit",async o=>{if(o.preventDefault(),l=o.target.elements.searchQuery.value.trim(),!l){iziToast.error({title:"Error",message:"Enter search query"});return}n=1,b(),c(),g();try{const{hits:t,totalHits:s}=await d(l,n);if(t.length===0){iziToast.warning({title:"Oops!",message:"No images found."});return}y(t),n*L<s?h():iziToast.info({title:"End",message:"You've reached the end."})}catch{iziToast.error({title:"Error",message:"Request failed."})}finally{p()}});B.addEventListener("click",async()=>{var o;n+=1,c(),g();try{const{hits:t,totalHits:s}=await d(l,n);y(t);const i=((o=document.querySelector(".gallery-item"))==null?void 0:o.getBoundingClientRect().height)||0;window.scrollBy({top:i*2,behavior:"smooth"}),n*L>=s?(c(),iziToast.info({title:"End",message:"You've reached the end."})):h()}catch{iziToast.error({title:"Error",message:"Loading more failed."})}finally{p()}});
//# sourceMappingURL=index.js.map
